AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31'

Parameters:
  OpenAISecretName:
    Type: String
    Default: "OpenAIAPIKey"
  AnthropicSecretName:
    Type: String
    Default: "AnthropicAPIKey"

Resources:
  # API Gateway
  LLMApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: LLMRouter
      EndpointConfiguration:
        Types:
          - REGIONAL

  # OpenAI Resource
  OpenAIResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref LLMApi
      ParentId: !GetAtt LLMApi.RootResourceId
      PathPart: "openai"

  # Anthropic Resource
  AnthropicResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref LLMApi
      ParentId: !GetAtt LLMApi.RootResourceId
      PathPart: "anthropic"

  # OpenAI Method
  OpenAIMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref LLMApi
      ResourceId: !Ref OpenAIResource
      HttpMethod: POST
      AuthorizationType: NONE
      RequestParameters:
        method.request.header.Authorization: true
      Integration:
        IntegrationHttpMethod: POST
        Type: HTTP_PROXY
        Uri: "https://api.openai.com/v1/chat/completions"
        IntegrationResponses:
          - StatusCode: 200
        RequestParameters:
          integration.request.header.Authorization: !Sub "'Bearer {{resolve:secretsmanager:${OpenAISecretName}}}'"
        PassthroughBehavior: WHEN_NO_MATCH

  # Anthropic Method
  AnthropicMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref LLMApi
      ResourceId: !Ref AnthropicResource
      HttpMethod: POST
      AuthorizationType: NONE
      RequestParameters:
        method.request.header.Authorization: true
      Integration:
        IntegrationHttpMethod: POST
        Type: HTTP_PROXY
        Uri: "https://api.anthropic.com/v1/messages"
        IntegrationResponses:
          - StatusCode: 200
        RequestParameters:
          integration.request.header.Authorization: !Sub "'{{resolve:secretsmanager:${AnthropicSecretName}}}'"
        PassthroughBehavior: WHEN_NO_MATCH

  # API Gateway Stage with AutoDeploy
  LLMStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref LLMApi
      StageName: "prod"
      AutoDeploy: true
    DependsOn:
      - OpenAIMethod
      - AnthropicMethod

  # IAM Role for API Gateway to access Secrets Manager
  APIGatewayIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: APIGatewaySecretsRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: APIGatewaySecretsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: 
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${OpenAISecretName}-*"
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${AnthropicSecretName}-*"

Outputs:
  ApiGatewayInvokeURL:
    Description: "API Gateway endpoint"
    Value: !Sub "https://${LLMApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
